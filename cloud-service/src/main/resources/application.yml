server:
  port: 8080
  servlet:
    context-path: /cloud
  tomcat:
    max-http-form-post-size: 100MB

spring:
  datasource:
    url: jdbc:postgresql://db:5432/cloud_db
    username: postgres
    password: postgres
    driver-class-name: org.postgresql.Driver
    hikari:
      connection-timeout: 30000
      maximum-pool-size: 10

  jpa:
    hibernate:
      ddl-auto: update
    database-platform: org.hibernate.dialect.PostgreSQLDialect
    show-sql: true
    properties:
      hibernate:
        format_sql: true

  mvc:
    async:
      request-attribute: true
    contentnegotiation:
      favor-path-extension: false

  web:
    resources:
      chain:
        strategy:
          content:
            enabled: false
    http:
      multipart:
        enabled: true
        max-file-size: 10MB
        max-request-size: 100MB
        file-size-threshold: 2KB

jwt:
  secret: "3q2+7wA/KbR9Xz8v1QnJkLpM0OxY4W5Z6cFtGhIuVdSeNwB7C8a"
  expiration: 86400000 # 24 часа

file:
  storage-path: ${UPLOAD_DIR:/app/uploads}

cors:
  path-pattern: "/cloud/**"
  allowed-origins:
    - "http://localhost:8081"
  allowed-methods:
    - "GET"
    - "POST"
    - "PUT"
    - "DELETE"
    - "OPTIONS"
  allowed-headers:
    - "Content-Type"
    - "Authorization"
    - "auth-token"
  exposed-headers:
    - "Authorization"
    - "auth-token"
  allow-credentials: true
  max-age: 3600

logging:
  level:
    root: INFO
    org.springframework.web: DEBUG
    ru.netology.cloudservice: DEBUG
    org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping: DEBUG